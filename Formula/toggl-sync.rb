# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class TogglSync < Formula
  desc "Toggl sync util"
  homepage "https://github.com/timemate"
  version "0.3.0"
  license "MIT"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/timemate/toggl-sync/releases/download/v0.3.0/toggl-sync-0.3.0-darwin-arm64.tar.gz"
      sha256 "4f526bb0bd5482aeee0fa13085a17bf4a2c1ba98afeb41ca9e10348e917b845d"

      def install
        bin.install "toggl-sync"
        output = Utils.popen_read("#{bin}/toggl-sync completion bash")
        (bash_completion/"toggl-sync").write output
        output = Utils.popen_read("#{bin}/toggl-sync completion zsh")
        (zsh_completion/"_toggl-sync").write output
        output = Utils.popen_read("#{bin}/toggl-sync completion fish")
        (fish_completion/"toggl-sync.fish").write output
        prefix.install_metafiles
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/timemate/toggl-sync/releases/download/v0.3.0/toggl-sync-0.3.0-darwin-amd64.tar.gz"
      sha256 "750a83fb1f48e7c963bd2aa5e87deb3074e5a91edcf16782fdbc105c16f154c2"

      def install
        bin.install "toggl-sync"
        output = Utils.popen_read("#{bin}/toggl-sync completion bash")
        (bash_completion/"toggl-sync").write output
        output = Utils.popen_read("#{bin}/toggl-sync completion zsh")
        (zsh_completion/"_toggl-sync").write output
        output = Utils.popen_read("#{bin}/toggl-sync completion fish")
        (fish_completion/"toggl-sync.fish").write output
        prefix.install_metafiles
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/timemate/toggl-sync/releases/download/v0.3.0/toggl-sync-0.3.0-linux-armv6.tar.gz"
      sha256 "fc820d1e7f66efb957fb881a6155ea1665c75bc27c90f74c76707749d2a65e90"

      def install
        bin.install "toggl-sync"
        output = Utils.popen_read("#{bin}/toggl-sync completion bash")
        (bash_completion/"toggl-sync").write output
        output = Utils.popen_read("#{bin}/toggl-sync completion zsh")
        (zsh_completion/"_toggl-sync").write output
        output = Utils.popen_read("#{bin}/toggl-sync completion fish")
        (fish_completion/"toggl-sync.fish").write output
        prefix.install_metafiles
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/timemate/toggl-sync/releases/download/v0.3.0/toggl-sync-0.3.0-linux-arm64.tar.gz"
      sha256 "ea0b2da20d1ad43302766546f82862b2aedfa3445e6bada1df0735e3c5a535be"

      def install
        bin.install "toggl-sync"
        output = Utils.popen_read("#{bin}/toggl-sync completion bash")
        (bash_completion/"toggl-sync").write output
        output = Utils.popen_read("#{bin}/toggl-sync completion zsh")
        (zsh_completion/"_toggl-sync").write output
        output = Utils.popen_read("#{bin}/toggl-sync completion fish")
        (fish_completion/"toggl-sync.fish").write output
        prefix.install_metafiles
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/timemate/toggl-sync/releases/download/v0.3.0/toggl-sync-0.3.0-linux-amd64.tar.gz"
      sha256 "514c21d9ced6b8f938b6dbea48126271162022e34311de98f27580f489555450"

      def install
        bin.install "toggl-sync"
        output = Utils.popen_read("#{bin}/toggl-sync completion bash")
        (bash_completion/"toggl-sync").write output
        output = Utils.popen_read("#{bin}/toggl-sync completion zsh")
        (zsh_completion/"_toggl-sync").write output
        output = Utils.popen_read("#{bin}/toggl-sync completion fish")
        (fish_completion/"toggl-sync.fish").write output
        prefix.install_metafiles
      end
    end
  end

  plist_options startup: false

  def plist
    <<~EOS
      <?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
  <dict>
    <key>Label</key>
    <string>#{plist_name}</string>
    <key>ProgramArguments</key>
    <array>
    <string>#{bin}/toggl-sync</string>
    <string>sync</string>
    <string>--service</string>
    </array>
    <key>RunAtLoad</key>
    <true/>
    <key>KeepAlive</key>
    <true/>
    <key>StandardErrorPath</key>
    <string>#{var}/log/toggl-sync/toggl-sync.log</string>
    <key>StandardOutPath</key>
    <string>#{var}/log/toggl-sync/toggl-sync.log</string>
  </dict>
</plist>

    EOS
  end

  test do
    system "#{bin}/toggl-sync --version"
  end
end
